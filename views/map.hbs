<h1>{{title}}</h1>
<p>{{map}}</p>

<style>
    #map-frame{
        top: 150px;
        left: 100px;
        overflow:visible;
    }
      path {
        stroke: green;
        stroke-width: 0.5px;
        fill: white;
      }
</style>

<!--img src="/svg/canada.svg" class="filter-green"/-->

<div id="map-frame">
    
</div>






<script type="text/javascript">

    var width = 800;
    var height = 400;
    var size = 2500;

    //var projection = d3.geoMercator();
    var projection = d3.geoEquirectangular();
    var path = d3.geoPath()
            .projection(projection);

    projection.scale(500);
    //projection.translate([100,100]);
    projection.translate([size/2,750]);
    projection.center([0, 0]);

    var svg = d3.select("#map-frame").append("svg")
        .attr("width", width)
        .attr("height", height);

    var g = svg.append("g");
    var mapdata = d3.json("/geojson/canada.geo.json");
    var cities = d3.csv("/geojson/cities.csv");

    Promise.all([mapdata, cities]).then(function(values){    
        svg.selectAll("path")
            .data(values[0].features)
            .enter()
            .append("path")
            .attr("d", path)
       
        svg.selectAll("circle")
            .data(values[1])
            .enter()
            .append("circle")
            .attr("class","circles")
            .attr("cx", function(d) {return projection([d.Longitude, d.Lattitude])[0];})
            .attr("cy", function(d) {return projection([d.Longitude, d.Lattitude])[1];})
            .attr("r", "1px") // radius
            
        svg.selectAll("text")
            .data(values[1])
            .enter()
            .append("text")
            .text(function(d) {
                return d.City;
                })
            .attr("x", function(d) {return projection([d.Longitude, d.Lattitude])[0] + 5;})
            .attr("y", function(d) {return projection([d.Longitude, d.Lattitude])[1] + 15;})
            .attr("class","labels")
    });
</script>
